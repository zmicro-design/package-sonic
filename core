#!/bin/bash

install() {
  # prepare vars
  local name="$PACKAGE_CORE_NAME"

  log::info "[$(timestamp)][package][$name] preparing ..."

  # get system os/arch
  local os="$PACKAGE_OS"
  local arch="$PACKAGE_OS_ARCH"
  local kernel="$PACKAGE_OS_KERNEL"
  local platform="$PACKAGE_OS_PLATFORM"
  # usr_bin_dir
  local usr_bin_dir="$PACKAGE_USER_BIN_DIR"
  local tmp_dir="$PACKAGE_TMP_DIR"

  #
  case $platform in
  darwin) ;;

  linux) ;;

  *)
    log::error "[$(timestamp)] unsupport platform: $platform"
    return 1
    ;;
  esac

  case $arch in
  arm64) ;;

  amd64) ;;

  *)
    log::error "[$(timestamp)] unsupport arch: $arch"
    return 1
    ;;
  esac
  #

  # # get latest version
  # log::info "[$(timestamp)][package][$name] checking latest version ..."
  # local latest_version=$(git::get_remote_latest_tag $PACKAGE_CORE_GIT_REPOSITORY)
  # if [ "$?" != "0" ]; then
  #   log::error "[$(timestamp)][package][$name] failed to get latest version ."
  #   return 1
  # fi
  # PACKAGE_CORE_VERSION=$latest_version
  # log::success "[$(timestamp)][package][$name] latest version: $PACKAGE_CORE_VERSION"

  # files
  local tmp_file="$name.zip"
  local source_bin_file="./$name"
  # local target_bin_file="$usr_bin_dir/$name"

  # prepare context
  cd $tmp_dir

  # reference: https://github.com/go-sonic/sonic/releases
  # example:
  #   https://github.com/go-sonic/sonic/releases/download/v1.0.8/sonic-darwin-amd64.zip
  #   https://github.com/go-sonic/sonic/releases/download/v1.0.8/sonic-darwin-arm64.zip
  #   https://github.com/go-sonic/sonic/releases/download/v1.0.8/sonic-linux-amd64.zip
  #   https://github.com/go-sonic/sonic/releases/download/v1.0.8/sonic-linux-arm64.zip
  # generate url
  local url="${PACKAGE_CORE_RELEASE_DOWNLOAD}/$PACKAGE_CORE_VERSION/${name}-${platform}-${arch}.zip"
  log::debug "[$(timestamp)][package][$name][$kernel][$arch] url: $url, file: ${tmp_file}, tmp_dir: $tmp_dir"

  # download
  log::info "[$(timestamp)][package][$name] downloading ..."
  os::download $tmp_file $url
  if [ "$?" != "0" ]; then
    log::error "[$(timestamp)][package][$name] failed to download from $url ."
    return 1
  fi

  # extract
  log::info "[$(timestamp)][package][$name] extracting ..."
  os::extract $tmp_file

  # install
  log::info "[$(timestamp)][package][$name] installing ..."
  os::install $source_bin_file $usr_bin_dir $name

  # @TODO need runtime resources and conf
  local context="$ZMICRO_PACKAGES_DATA_PATH/sonic"
  if [ ! -d "$context" ]; then
    mkdir -p $context
  fi
  mv ./conf $context
  mv ./resources $context

  # clean
  log::info "[$(timestamp)][package][$name] cleaning ..."
  rm -rf $tmp_dir
}

export -f install
